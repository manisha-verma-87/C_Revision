/* print even and odd in sequence by two threads*/
#include <stdio.h>
#include <pthread.h>

int num = 1;
pthread_mutex_t m = PTHREAD_MUTEX_INITIALIZER;
pthread_cond_t cv = PTHREAD_COND_INITIALIZER;

void* print_even ()
{
  while (num < 10)
  {
    pthread_mutex_lock (&m);
    while (num % 2 != 0)
	{
	  pthread_cond_wait (&cv, &m);
	}

    printf ("even thread: %d\n", num++);
    pthread_cond_signal (&cv);
	pthread_mutex_unlock (&m);
  }
}

void* print_odd ()
{
  while (num < 10)
  {
    pthread_mutex_lock (&m);
    if (num % 2 == 0)
	{
	  pthread_cond_wait (&cv, &m);
	}
    
	printf ("odd thread: %d\n", num++);
	pthread_cond_signal (&cv);
	pthread_mutex_unlock (&m);
  }
}

int main ()
{
  pthread_t t1, t2;
  pthread_create (&t1, NULL, print_even, NULL);
  pthread_create (&t2, NULL, print_odd, NULL);

  pthread_join (t1, NULL);
  pthread_join (t2, NULL);

  return 0;
}


